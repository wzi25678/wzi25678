package 第07章__高级排序;

/**
 * Title：XXXX OCR
 * Description:XXXX OCR 3.0
 * Copyright:Copyright(c) 2021
 * Company:XXXX 有限公司
 *
 * @author Wzi
 * @version jdk1.8
 * <p>
 * 带参数构造函数，初始化模式名、变量名称和数据源类型
 * @create_date 2019/10/4 15:09
 */
class Case02_partition {
    private long [] theArray;
    private int nElems;

    public Case02_partition(int max){
        theArray = new long[max];
        nElems = 0;
    }

    public int size(){
        return nElems;
    }

    public void insert(long value){
        theArray[nElems] = value;
        nElems++;
    }

    public void display(){
        System.out.println("A");
        for (int j=0;j<nElems;j++){
            System.out.println(theArray[j] + " ");
        }
        System.out.println();
    }

    public int partitionIt(int left,int right,long pivot){
        int leftPtr = left - 1;
        int rightPtr = right - 1;
        while (true){
            while (leftPtr < right &&       //Are you fucking kite me?
                                            //find bigger item
                    theArray[++leftPtr] < pivot){

            }
            while (rightPtr > left && theArray[--rightPtr] < pivot){
                //
            }
            if (leftPtr >= rightPtr){
                break;
            }else {
                swap(leftPtr,rightPtr);
            }
        }
        return leftPtr;
    }

    private void swap(int index1, int index2) {
        long temp;
        temp = theArray[index1];
        theArray[index1] = theArray[index2];
        theArray[index2] = temp;
    }
} //end -class -Case02_partition

class ParititionApp{
    public static void main(String[] args) {
        int maxSize = 16;
        Case02_partition arr;
        arr = new Case02_partition(maxSize);
        for (int i=0;i<maxSize;i++){
            long n = (int)(Math.random()*99);
            arr.insert(n);
        }
        arr.display();
        long pivot = 99;
        System.out.println("Pivot is " + pivot);
        int size = arr.size();
        int partDex = arr.partitionIt(0,size-1,pivot);
        System.out.println(" , Partition is at index " + partDex);
//        arr.display();
//        long pivot = 99;
//        System.out.print("Pivot is " + pivot);
//        int size = arr.size();
//
//        int partDex = arr.partitionIt(0,size-1,pivot);
//        System.out.println(", Partition is at index " + partDex);
//        arr.display();
    }
}
