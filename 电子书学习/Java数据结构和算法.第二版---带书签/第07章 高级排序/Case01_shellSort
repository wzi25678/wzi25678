package 第07章__高级排序;

import java.util.Arrays;

/**
 * Title：XXXX OCR
 * Description:XXXX OCR 3.0
 * Copyright:Copyright(c) 2021
 * Company:XXXX 有限公司
 *
 * @author Wzi
 * @version jdk1.8
 * <p>
 * 带参数构造函数，初始化模式名、变量名称和数据源类型
 * @create_date 2019/10/4 15:09
 */

//这里不用public声明，主要是防止在同一个项目包中因重名而产生的错误。
class Case01_shellSort {
    private long [] theArray;
    private int nElems;

    public Case01_shellSort(int max) {
        this.theArray = new long[max];
        this.nElems = 0;
    }


    public void insert(long values) {
        theArray[nElems] = values;
        nElems++;
    }

/**    @Override
    public String toString() {
        return "Case01_shellSort{" +
                "theArray=" + Arrays.toString(theArray) +
                ", nElems=" + nElems +
                '}';
    }*/

    public void display() {
        System.out.println("A: ");
        System.out.printf(Arrays.toString(theArray));
        System.out.println("");
    }

    public void shellSort() {
        int inner,outer;
        long temp;
        int h=1;
        while (h<=nElems/3){
            h=h*3+1;    //h*=3+1;
        }
        while (h>0){
            for (outer=h;outer<nElems;outer++){
                temp = theArray[outer];
                inner = outer;

                while (inner>h-1 && theArray[inner-h] >= temp){
                    theArray[inner] = theArray[inner-h];
                    inner -=h;
                }
                theArray[inner] = temp;
            }
            h=(h-1) / 3;       //间距式跳跃，实现shellSort
        }
    }
}

class ShellSortApp {
    public static void main(String[] args) {
        int maxSize = 10;
        Case01_shellSort arr;
        arr = new Case01_shellSort(maxSize);

        for (int j=0;j<maxSize;j++){
            //        Math.random()随机产生一个0~1之间的小数
            long n = (int)(java.lang.Math.random()*99);
            arr.insert(n);
        }
        arr.display();
        arr.shellSort();
        arr.display();
    }
}

