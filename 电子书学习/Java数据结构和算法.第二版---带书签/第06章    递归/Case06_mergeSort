package 第06章_递归;

import java.sql.Array;

/**
 * Title：XXXX OCR
 * Description:XXXX OCR 3.0
 * Copyright:Copyright(c) 2021
 * Company:XXXX 有限公司
 *
 * @author Wzi
 * @version jdk1.8
 * <p>
 * 带参数构造函数，初始化模式名、变量名称和数据源类型
 * @create_date 2019/10/4 15:09
 */
class Case06_mergeSort {
    private long [] theArray;
    private int nElems;

    //生成一个初始化的构造器
    public Case06_mergeSort(int max){
        theArray = new long[max];
        nElems = 0;
    }

    public void insert(long value){
        theArray[nElems] = value;
        nElems++;
    }

    public void display(){
        for (int i=0;i<nElems;i++){
            System.out.println(theArray[i]+ " ");
        }
        System.out.println("-------------------------------");
    }

    public void mergeSort(){
        long[] workSpace = new long[nElems];
        recMergeSort(workSpace,0,nElems-1);
    }

    private void recMergeSort(long[] workSpace, int lowerBound, int upperBound) {
        if (lowerBound == upperBound) {
            return;
        }else {
            //先调整recMergeSort，再进行正儿八经的排序Merge
            int mid = (lowerBound+upperBound) / 2;
            recMergeSort(workSpace,lowerBound,mid);
            recMergeSort(workSpace,mid+1,upperBound);
            //归并是两个数组，归并成一个数组
            Merger(workSpace,lowerBound,mid+1,upperBound);
        }

    }

    private void Merger(long[] workSpace, int lowPtr, int highPtr, int upperBound) {
        int j=0;
        int lowerBound = lowPtr;
        int mid = highPtr -1;
        int n = upperBound - lowerBound +1;
        while (lowPtr <= mid && highPtr<= upperBound){
            if (theArray[lowPtr] < theArray[highPtr]){
                workSpace[j++] = theArray[lowPtr++];    //正常补齐
            }else {
                workSpace[j++] = theArray[highPtr++];
            }
        }
        while (lowPtr <= mid){
            workSpace[j++] = theArray[lowPtr++];
        }
        while (highPtr <= upperBound){
            workSpace[j++] = theArray[highPtr++];
        }

        for (j=0;j<n;j++){
            //workSpace毕竟只是一个辅助数组。
            theArray[lowerBound+j] = workSpace[j];
        }
    }
}//end- class-Case06_mergeSort
class MergeSortApp{
    public static void main(String[] args) {
        int maxSize = 100;
        Case06_mergeSort arr;   /**private long [] theArray;
                                    private int nElems;

         */
        arr = new Case06_mergeSort(maxSize);
        arr.insert(66); 
    }
}

