package 编程专用函数;

import java.util.Arrays;
import java.util.Scanner;
//题目 2016: 新生的入队仪式
/*
第一行是两个数n,m，表示有n(n<100000)个同学，新生身高为m(m<10^9)

接下来1行，一共n个数，表示目前合唱队的队员从左至右的身高。

接下来一个数字（1或者2）表示老师希望他站在哪一侧。
 */
/*
农场里的马，在草场开心地吃着牧草，直到天色晚了，牧马的人会将马依次按号牌大小，依次放入相应的位置。

但是这马总是打乱了顺序，于是牧马人都会想办法把这些马都排好：每次从最前面开始，然后与后面的号牌进行比较，每次将小的号牌的马换到前面。

这牧马人整理马的顺序相当耗费体力，每次交换，消耗体力为两匹马槽位的距离*2。

他想知道，他要花费多少体力才能完成任务。
 */
public class Main {
    static int count = 0;
    public static void main(String[] args) {
      Scanner sc = new Scanner(System.in);
      int  enumerator = 0;
      int n = sc.nextInt();
      int arr[] = new int [n];

      for (int i = 0;i<n;i++){
          arr[i] = sc.nextInt();
     }
      int site = sc.nextInt();
      int helper [] = new int[site];
      int grade = arr[site-1];
      for (int i=0;i<site;i++){
          helper[i] = arr[i];
      }
        Arrays.sort(helper);
        for (int i=site-1;i>=0;i--){
            if (grade == helper[i]){
                System.out.println(enumerator+1);
                return;
            }
            enumerator++;
        }
//      for ( int i = 0;i<n;i++){
//          for (int j = i+1;j<n;j++){
//              if (arr[i]>arr[j]){
//                  int temp = arr[i];
//                  arr[i] = arr[j];
//                  arr[j] = temp;
//                  count+=(j-i);
//              }
//          }
         sc.close();
      }
      //  System.out.println(count*2);
//      int start = 1;
//      String str = sc.next();
//       dichotomy(start,n,str);



    private static void dichotomy(int start,int n,String s) {

       if (s.charAt(count) == 'u'){
           int x = (start+n)/2;
           count++;
           dichotomy(x+1,n,s);
           return;
       }
       if (s.charAt(count) == 'd'){
           int x = (start+n)/2;
           count++;
           dichotomy(start,x-1,s);
           return;
       }
       if (s.charAt(count) == 'y'){
           int x = n;
           System.out.println(x);
           return;
       }
    }


}
