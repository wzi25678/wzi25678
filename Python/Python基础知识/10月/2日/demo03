# 学习作者： Wzi
# 开发时间： 2022/7/20 14：05
# 学好Python，搞定大数据
# import sys
#
# print('命令行参数如下:')
# for i in sys.argv:   #打印Python命令行
#     print(i)
#     print(sys.argv)
#
# print('\n\nPython 路径为：', sys.path, '\n')
import math
import turtle
# import sys
# print(dir(sys))
#['__breakpointhook__', '__displayhook__', '__doc__', '__excepthook__', '__interactivehook__',
# '__loader__', '__name__', '__package__', '__spec__', '__stderr__', '__stdin__', '__stdout__',
# '__unraisablehook__', '_base_executable', '_clear_type_cache', '_current_exceptions', '_current_frames',
# '_deactivate_opcache', '_debugmallocstats', '_enablelegacywindowsfsencoding', '_framework', '_getframe',
# '_git', '_home', '_xoptions', 'addaudithook', 'api_version', 'argv', 'audit', 'base_exec_prefix',
# 'base_prefix', 'breakpointhook', 'builtin_module_names', 'byteorder', 'call_tracing', 'copyright',
# 'displayhook', 'dllhandle', 'dont_write_bytecode', 'exc_info', 'excepthook', 'exec_prefix', 'executable',
# 'exit', 'flags', 'float_info', 'float_repr_style', 'get_asyncgen_hooks', 'get_coroutine_origin_tracking_depth',
# 'getallocatedblocks', 'getdefaultencoding', 'getfilesystemencodeerrors', 'getfilesystemencoding', 'getprofile',
# 'getrecursionlimit', 'getrefcount', 'getsizeof', 'getswitchinterval', 'gettrace', 'getwindowsversion', 'hash_info',
# 'hexversion', 'implementation', 'int_info', 'intern', 'is_finalizing', 'maxsize', 'maxunicode', 'meta_path',
# 'modules', 'orig_argv', 'path', 'path_hooks', 'path_importer_cache', 'platform', 'platlibdir', 'prefix',
# 'pycache_prefix', 'set_asyncgen_hooks', 'set_coroutine_origin_tracking_depth', 'setprofile', 'setrecursionlimit',
# 'setswitchinterval', 'settrace', 'stderr', 'stdin', 'stdlib_module_names', 'stdout', 'thread_info',
# 'unraisablehook', 'version', 'version_info', 'warnoptions', 'winver']

# dir(math)
# print(math)
# #<module 'math' (built-in)>
# dir(turtle)
# print(turtle)
#<module 'turtle' from 'C:\\Program Files\\Python310\\lib\\turtle.py'>

# s = 'Hello, Runoob'
# print(str(s))
# print(repr(s))
# print(s)
# # Hello, Runoob
# 'Hello, Runoob'
# Hello, Runoob
hello = 'hello, runoob\n'
print(hello)
#显示：
#hello, runoob
# （\n生效）
hellos = repr(hello)
print(hellos)   #'hello, runoob\n'
