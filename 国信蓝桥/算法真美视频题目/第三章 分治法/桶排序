package 重要算法;/*
@Author Wzi
@Create_Date 2019/10/4 15:09
*
*/

import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;

/*
简单解释：
就是把一个数组分成几个桶（其实是几个区间，从小到大或从大到小的几个区间）装，然后让每个桶（区间）有序，然后取出来放一起就可以了，相当于把几个有序的段拿出来放一起，自然还是有序的，当然需要是按照区间的顺序拿了。
 */
public class 桶排序 {
    public static void main(String[] args) {
        int arr [] = {9, 3, 5, 4, 9, 1, 2, 7, 8,1,3, 6, 5, 3, 4, 0, 10, 9, 7, 9};
        BucketSort(arr,true);
    }

    private static void BucketSort(int[] arr, boolean Ascending) {
        if (arr ==null || arr.length==0) return;
        int max = Integer.MAX_VALUE;
        System.out.println(max+"|||max.这是什么操作？");
        int min = Integer.MIN_VALUE;
        System.out.println(min+"|||min.这是什么操作？");
        for(int i=0;i<arr.length;i++){
            max = Math.max(arr[i],max);
            min = Math.min(arr[i],min);
        }
        int bucketNUm = (max-min)/ arr.length+1;
        //构造基数排序，桶排序的要求链表
        ArrayList<ArrayList<Integer>> bucketArrayList = new ArrayList<>(bucketNUm);
        //计算桶的数量
        for(int i=0;i<bucketNUm;i++){
            bucketArrayList.add(new ArrayList<>());
        }
        //将每个元素放入桶中
        for (int i=0;i<arr.length;i++){
            int num = (arr[i]-min)/ (arr.length);
            bucketArrayList.get(num).add(arr[i]);
        }
        for (int i=0;i<bucketArrayList.size();i++){
            //调用Collections.sort对每一组内进行排序
            Collections.sort(bucketArrayList.get(i));
        }
        int index;
        //选择是要正序，还是要逆序
        if (Ascending){
            index= 0;
        }else index = arr.length-1;
        for (int i=0;i<bucketArrayList.size();i++){
            for (int j=0;j<bucketArrayList.get(i).size();j++){
                arr[index] = bucketArrayList.get(i).get(j);
                if (Ascending){
                    index++;
                }
                else index--;
            }
        }

    }
}
