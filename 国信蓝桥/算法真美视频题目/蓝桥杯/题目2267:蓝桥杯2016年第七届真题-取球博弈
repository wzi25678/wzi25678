package Year_2016;

import java.util.Arrays;
import java.util.Scanner;

public class 取球博弈 {
	static int [] arr;
	static char res;
	static char [][][] cache = new char[1000][2][2];
	
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		arr = new int [3];
		arr[0] = sc.nextInt();
		arr[1] = sc.nextInt();
		arr[2] = sc.nextInt();
		Arrays.sort(arr);
		
		for(int i = 0;i<5;i++) {
			int num = sc.nextInt();
			res = dfs(num,0,0);
			System.out.print(res+" ");
		}
		sc.close();
		return;
	}//end -main

	private static char dfs(int num, int me, int you) {
		// TODO Auto-generated method stub
		if(num < arr[0]) {
			if((me & 1) == 1) {
				if((you & 1) == 1) {
					return cache[num][me][you] = '0';
				}else {
					return cache[num][me][you] = '+';
				}
			}//-if((me & 1) == 1) 
			else {	//((me & 1) != 1)
				if((you & 1) == 1) {
					return cache[num][me][you] = '-';
				}else {
					return cache[num][me][you] = '0';
				}
			}//else
		}//if(num < arr[0])
		if(cache[num][me][you] != '\0') {
			return cache[num][me][you];
		}
		boolean ping = false;
		for(int i=0;i<3;i++) {
			if(num >= arr[i]) {
				res = dfs(num - arr[i],you,(arr[i] & 1) == 0 ? me :(1 -me) );
				if(res == '-') {
					return cache[num][me][you] = '+';
				}
				if(res == '0') {
					ping = true;
				}
			}//if(num >= arr[i]) 
		}//for(int i=0;i<3;i++)
		
		if(ping) {
			return cache[num][me][you] = '0';
		}
		
		return cache[num][me][you] = '-';
	}//end -char dfs(int num, int i, int j)

}//end -class 取球博弈
