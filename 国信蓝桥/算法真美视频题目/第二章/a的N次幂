package 第二章;/*
@Author Wzi
@Create_Date 2019/10/4 15:09
*
*/

public class 题4_最长连续递增子序列 {
    public static void main(String[] args) {
        int a=2,n=15;
        System.out.println((int)Math.pow(a,n));
        System.out.println(pow0(a,n));
        System.out.println(pow2(a,n));
    }

    private static int pow2(int a, int n) {
        if(n==0) return 1;

        int res=a;
        int ex=1;
        //能翻
        while((ex<<1)<=n) {
            //翻
            res=res*res;
            //指数
            ex<<=1;//乘2
        }
        //不能翻
        //差n-ex次方没有乘到结果里面
        return res*pow2(a,n-ex);
        //递归下，先计算出最大偶次幂，然后再补上一次幂。
    }


    private static int pow0(int a,int n) {
        int res=1;
        for(int i=0;i<n;i++) {
            res*=a;
        }
        return res;
    }
}
