package ___2022年省赛Java大学A组;

import java.util.Arrays;
import java.util.Scanner;

public class 全排列的价值_全排列访问 {
	public static long res  = 0l,n ;
	private static long mod = 998244353L;
	private static long arr[];
	private static long helper[] = new long [1];
	
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		while(sc.hasNext()) {
			n = sc.nextLong();
			arr = new long[(int) n];
			for(int i=0;i<n;i++) {
				arr[i] = i+1;
			}
			res +=permute(arr,0,helper,0);	//对arr数组进行全排列，其实位置为0
			System.out.println(res);
		}
		sc.close();
	}//main
	
	
	private static long permute(long[] arr, int start,long[] helper,int help) {
		// TODO Auto-generated method stub
		if(start == arr.length -1) {
			//到最后一个了
			//System.out.println(Arrays.toString(arr));	//当前已经到最后一个了
			long count = 0;
			for(int i=0;i<arr.length;i++) {
				for(int j=0;j<i;j++) {
					if(arr[j] < arr[i]) {
						count++;
					}
				}
			}
			return helper[help] = count;
		}
		for(int i=start;i<arr.length;i++) {
			swap(arr,start,i);
			permute(arr,start+1,helper,0);
			swap(arr,start,i);
		}
		return 0;
	}//end -private static void premute(long[] arr2, int i)

	private static void swap(long[] arr, int i, int j) {
		// TODO Auto-generated method stub
		long temp = arr[i];
		arr[i] = arr[j];
		arr[j] = temp;
		
	}

}
