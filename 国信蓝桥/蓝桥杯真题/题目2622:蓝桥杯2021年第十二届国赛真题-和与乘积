import java.util.Scanner;

public class Main {
	private static int n,T ;
	private static int N =  200000+2;
	private static int e[] = new int [N],ne[] = new int [N],a,b,c,d,m,index,ans;
	
	public static void main(String[] args) {
		/**
		 * 给定一个数列 A = (a1, a2, · · · , an)，问有多少个区间 [L, R] 满足区间内元素的乘积等于他们的和，
		 * 即 aL · aL+1 · · · aR = aL + aL+1 + · · · + aR 。
		 */
		Scanner sc = new Scanner(System.in);
		n = sc.nextInt();
		for(int i=1;i<=n;i++) {
			e[i] = sc.nextInt();
			if(index==0 && e[i]==1) {
				ne[a]--;
			}
			else if(index==0 && e[i]!=1) {
				ne[++a] = e[i];
				index = 1;
			}
			else if(index==1 && e[i]==1) {
				ne[++a]--;
				index = 0;
			}
			else {
				ne[++a] = e[i];
			}
		}
		long t,p,q;
		for(int i=1;i<=a;i++) {
			if(ne[i] < 0) {
				for(int j=-ne[i];j>=1;j--) {
					t=1;
					p=j;
					for(int k=i+1;k<=a;k++) {
						if(ne[k]<0) {
							if(t-p >0 && t-p <= -ne[k]) {
								ans++;
							}
							p+=-ne[k];
						}else {
							t*=ne[k];
							p+=ne[k];
							if(t==p) {
								ans++;
							}
						}
						if(t>3*n) {
							break;
						}
					}
				}
			}else {
				t=p=ne[i];
				for(int k=i+1;k<=a;k++) {
					if(ne[k]<0) {
						if(t-p>0 && t-p <=-ne[k]) {
							ans++;
						}
						p+=-ne[k];
					}else {
						t*=ne[k];
						p+=ne[k];
						if(t==p) {
							ans++;
						}
					}
					if(t>3*n) {
						break;
					}
				}
			}
		}
		System.out.println(ans+n+1);
		sc.close();
	}

}
