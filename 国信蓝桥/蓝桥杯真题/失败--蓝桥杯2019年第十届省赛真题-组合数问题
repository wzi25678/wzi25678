package Year_2018;

import java.util.Scanner;

public class 组合数问题 {
	private static int n,m,k,t;	//未知数
	private static long[][] C = new long[1002][1002] ;  //用以表示组合数
	private static int count;
	//private static int lat,rat,lbt,rbt,lct,rct,ht;
	
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		t = sc.nextInt();
		k = sc.nextInt();
		while(t-- != 0) {
			n = sc.nextInt();
			m = sc.nextInt();
			count = 0;
			for(int i=1;i<=n;++i) {
				long min = Math.min(i, m);
				for(int j=0;j<=min;++j) {
					if(combination(i,j) == 0) {
						count++;
						count%=1e9 + 7;
					}
				}//for(int j=1;j<=min;j++)
			}//for(int i=1;i<=n;i++) 
			System.out.println(count);
		}//while(t-- != 0)
		sc.close();
	}//end -main
	
	
	private static long combination(int i, int j) {
		// TODO Auto-generated method stub
		if(m == 0 || m==n) {
			return 1;
		}
		if(C[n][m] !=0) {
			return C[n][m];
		}
		C[n][m] = ((combination(n-1, m-1)) + combination(n-1, m)) % k;
		return C[n][m];
	}//end -long combination(int i, int j)

}//end -class 组合数问题
