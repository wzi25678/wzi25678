'''
Parameters:
    trainMatrix -训练文档矩阵，即setOfWord2Vec返回的renturnVec构成的矩阵
    trainCategory - 训练类别标签向量，即loadDataSet返回的classVec
    
Returns:
    p0Vect - 正常邮件类的条件概率数组
    p1Vect - 垃圾邮件类的条件概率数组
    pAbusive - 文档属于垃圾邮件类的概率
'''
def trainNBO(trainMatrix,trainCategory):
    numTrainDocs = len(trainMatrix)      #计算训练的文档数目
    numWords = len(trainMatrix[0])       #计算每篇文档的词条数
    pAbusive = sum(trainCategory) / float(numTrainDocs)   #文档属于垃圾邮件类的概率
    p0Num = np.ones(numWords)
    p1Num = np.ones(numWords)
    p0Denom = 2.0
    p1Denom = 2.0   #分母初始化为 2.拉普拉斯平滑
    for i in range(numTrainDocs) :
        if trainCategory[i] == 1:    
            #统计属于侮辱类的条件概率所需的数据，即P（w0|1）,P(w1|1),P(w2|1)。。。。。
            p1Num += trainMatrix[i]
            p1Denom += sum(trainMatrix[i])
        else :
            # 统计属于非侮辱类的条件概率所需的数据，即P（w0|0）,P(w1|0),P(w2|0)。。。。。
            p0Num += trainMatrix[i]
            p0Denom += sum(trainMatrix[i])
        #取对数是为了防止小数点相乘之后导致，【数据下溢出】的问题
        p1Vect = np.log(p1Num/p1Denom)
        p0Vect = np.log(p0Num/p0Denom)
        
    #返回：
    #属于正常邮件类的条件概率数组
    #属于侮辱垃圾邮件类的条件概率数组
    #属于垃圾邮件类的概率
    return p0Vect,p1Vect,pAbusive
