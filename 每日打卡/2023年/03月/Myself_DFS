package 第二章;

import java.util.Iterator;
import java.util.LinkedList;

public class Myself_DFS {
	
}
class Graph {
	private int vertex;
	private LinkedList<Integer> adj[];
	
	public Graph(int vertex) {
		this.vertex = vertex;
		adj = new LinkedList[vertex];
		for(int i=0;i<vertex;i++) {
			adj[i] = new LinkedList();
		}
	}
	
	void addEdge(int v,int w) {
		adj[v].add(w);
	}
	
	void DFS() {
		boolean visited[] = new boolean[vertex];
		
		DFSUtil(vertex,visited);
	}

	private void DFSUtil(int v,boolean visited[]) {
		// TODO Auto-generated method stub
		visited[v] = true;
		
		System.out.println("当前的V是："+v);
		
		Iterator<Integer> i = adj[v].listIterator();
		while(i.hasNext()) {
			int n = i.next();
			if(!visited[n]) {
				DFSUtil(n, visited);
			}
		}
	}
}
