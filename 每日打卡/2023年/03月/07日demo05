5.面向对象思想落地实现的规则一
 *  1.创建类，设计类的成员
 *  2.创建类的对象
 *  3.通过“对象.属性”或“对象.方法”调用对象的结构

补充：几个概念的使用说明
 *  属性 = 成员变量 = field = 域、字段
 *  方法 = 成员方法 = 函数 = method
 *  创建类的对象 = 类的实例化 = 实例化类
7.匿名对象:我们创建的对象，没显式的赋给一个变量名。即为匿名对象
特点：匿名对象只能调用一次。
举例：
	new Phone().sendEmail();
		new Phone().playGame();
		
		new Phone().price = 1999;
		new Phone().showPrice();//0.0
     * 		2.2 关于权限修饰符的不同
 * 		属性：可以在声明属性时，指明其权限，使用权限修饰符。
 * 			常用的权限修饰符：private、public、缺省、protected  --->封装性
 * 			目前，大家声明属性时，都使用缺省就可以了。
 * 		局部变量：不可以使用权限修饰符。
 2.3 默认初始化值的情况：
 * 		属性：类的属性，根据其类型，都默认初始化值。
 * 			整型（byte、short、int、long：0）
 * 			浮点型（float、double：0.0）
 * 			字符型（char：0  （或'\u0000'））
 * 			布尔型（boolean：false）
 * 
 * 			引用数据类型（类、数组、接口：null）
 * 
 * 		局部变量：没默认初始化值。
 *  		意味着，我们在调用局部变量之前，一定要显式赋值。
 * 			特别地：形参在调用时，我们赋值即可。
 属性一定要赋初始化的值，但是局部变量就不需要。不过，当你需要调用局部变量的时候，还是需要显式化的赋一个初值才可以被执行。
 
  * 		2.4 在内存中加载的位置：
 * 		属性：加载到堆空间中   （非static）
 * 		局部变量：加载到栈空间
 在栈里面和在堆里面最大的不同就是执行查找时间上的不同。自己想想栈长什么样，堆长什么样。。
 
  * 2. 方法的声明：权限修饰符  返回值类型  方法名(形参列表){
 * 					方法体
 * 			  }
 
 1.方法的重载的概念
定义：在同一个类中，允许存在一个以上的同名方法，只要它们的参数个数或者参数类型不同即可。
 * 	
总结："两同一不同":同一个类、相同方法名
                   参数列表不同：参数个数不同，参数类型不同
 
 重写发生在子父类之间，子类继承了父类的方法（非构造，final，static方法），并对父类的原方法进行了属于自己的改写。
 
